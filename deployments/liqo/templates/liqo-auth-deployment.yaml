---
{{- $authConfig := (merge (dict "name" (required ".Values.auth.name is required" .Values.auth.name) "module" (required ".Values.auth.module is required" .Values.auth.module)) .) -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "liqo.prefixedName" $authConfig }}
  labels:
    {{- include "liqo.labels" $authConfig | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "liqo.selectorLabels" $authConfig | nindent 6 }}
      {{- include "liqo.authServiceLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "liqo.selectorLabels" $authConfig | nindent 8 }}
        {{- include "liqo.authServiceLabels" . | nindent 8 }}
      {{- if .Values.auth.pod.labels }}
        {{- toYaml .Values.auth.pod.labels | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.pod.annotations }}
      annotations:
        {{- toYaml .Values.auth.pod.annotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "liqo.prefixedName" $authConfig }}
      {{- if not .Values.auth.ingress.enable }}
      initContainers:
        - name: {{ .Values.auth.initContainer.name }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          image: {{ .Values.auth.initContainer.imageName }}
          volumeMounts:
            - mountPath: '/certs'
              name: certs
          command: [ "/bin/sh" ]
          args: [ "-c", 'openssl req -x509 -subj "/C=IT/ST=Turin/O=Liqo" -nodes -days 365 -newkey rsa:4096 -keyout /certs/key.pem -out /certs/cert.pem' ]
      {{- end }}
      containers:
        - image: {{ .Values.auth.imageName }}{{ include "liqo.suffix" $authConfig }}:{{ include "liqo.version" $authConfig }}
          name: {{ .Values.auth.name }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: ["/usr/bin/auth-service"]
          args:
          - "--namespace"
          - "$(POD_NAMESPACE)"
          - "--resyncSeconds"
          - "30"
          - "--listeningPort"
          {{- if .Values.auth.ingress.enable }}
          - "5000"
          {{- else }}
          - "443"
          - "--useTls"
          {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.apiServer.ip }}
            - name: APISERVER
              value: "{{ .Values.apiServer.ip }}"
            {{- end }}
            {{- if .Values.apiServer.port  }}
            - name: APISERVER_PORT
              value: "{{ .Values.apiServer.port }}"
            {{- end }}
          resources:
            limits:
              cpu: 50m
              memory: 50M
            requests:
              cpu: 50m
              memory: 50M
          volumeMounts:
            - mountPath: '/certs'
              name: certs
      volumes:
        - name: certs
          emptyDir: {}